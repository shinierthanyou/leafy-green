data_D3$id <- data_D3$Tree.ID
data_D3$Rowf <- as.factor(data_D3$Row)
data_D3$Treef <- as.factor(data_D3$Tree)
# mmer linear mixed model fit with fixed effects and random effects.
# spl2D fits 2D spline
mix12 <- mmer(fixed= Chl ~1,
random =~vs(id, Gu=A)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D3)
mix12 <- mmer(fixed= Chl,
random =~vs(id, Gu=A)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D3)
mix12 <- mmer(fixed= Chl~1,
random =~vs(id, Gu=A)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D3)
View(A)
options( stringsAsFactors=F,
max.print = 1000,
scipen=8,
digits=4)
library(data.table)
library(ggplot2)
library(sommer)
library(gplots)
library(xlsx)
library(plyr)
options( stringsAsFactors=F,
max.print = 1000,
scipen=8,
digits=4)
Data <- read.xlsx(file = "Entire.xlsx", sheetName = "Sheet1",startRow = 1, as.data.frame = T)
data_D3 = subset(Data,Allocation == "F1")
str(data_D3)
data_D3$Tree = data_D3$Row
data_D3$Row = data_D3$Column
data_D3 <- transform(data_D3, Treeb = substr(Tree.ID, 2,6))
data_D3$Treee = "1"
data_D3$Tree.ID = paste0(data_D3$Treee, sep = "", data_D3$Treeb)
Comb = ddply(data_D3, .(Tree.ID), summarize, Anth = mean(Anth, na.rm = T),  Chl = mean(Chl, na.rm = T), Flav = mean(Flav, na.rm = T))
data_D3 <- data_D3[,c(1,4,8,16)]
data_D3 = merge(data_D3,Comb, by = "Tree.ID")
data_D3 = distinct(data_D3)
data_D3 = data_D3[!is.na(data_D3$Chl),]
#remove last two columns(unrequired I guess)
str(data_D3)
#Rename to fit into code, and factors
data_D3$id <- data_D3$Tree.ID
data_D3$Rowf <- as.factor(data_D3$Row)
data_D3$Treef <- as.factor(data_D3$Tree)
# stringsAsFactors = FALSE, prevent importing as factors
# check.names = FALSE, prevent R from adding extra values to names
# na.strings = "--", converts given na into NA
snp_D2 <- read.csv("EC103xEC201_GBS_40clusters_abxaa.csv",header=T,stringsAsFactors = FALSE, check.names = FALSE, na.strings = "--")
# Allocating numeric value to markers
snp_D2[snp_D2=="aa"] <- 0
snp_D2[snp_D2=="ab"] <- 1
snp_D2[snp_D2=="bb"] <- 2
# Remove Tree ID
snp_D2 <- snp_D2[,-1]
# Transpose, turn into a matrix
snp_M2 <- t(as.matrix(sapply(snp_D2,as.numeric)))
#Select snps from individuals present in the data_D3 matrix
snp_M2 <- snp_M2[row.names(snp_M2) %in% data_D3$id,]
#Create an A matrix (Additive relationship) and view top 10 rows and columns
A <-  A.mat(snp_M2[])
A[1:10,1:10]
#create a heatmap of relationships (maybe use another heatmap style this one bit clunky)
colfunc <- colorRampPalette(c("steelblue4","springgreen","yellow"))
heatmap.2(A[1:100,1:100], col = colfunc(100),Colv = "Rowv",revC=TRUE)
#plot physical height distribution on the ground
ggplot(data=data_D3,aes(x=Row,y=Tree,fill=Chl))+
geom_tile()+
scale_fill_gradientn(colours = terrain.colors(10))
#plot count
ggplot(data=data_D3,aes(x=Height,group=pruning,fill=pruning))+
geom_histogram(alpha=0.5)
# mmer linear mixed model fit with fixed effects and random effects.
# spl2D fits 2D spline
mix12 <- mmer(fixed= Chl~1,
random =~vs(id, Gu=A)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D3)
View(data_D3)
library(data.table)
library(ggplot2)
library(sommer)
library(gplots)
library(xlsx)
# No option for stringsAsFactors
data_D2 <- read.xlsx("Height phenotype 20 April 2018.xlsx",sheetName = "Phenotypes April 2018",startRow = 1, as.data.frame = T)
str(data_D2)
#remove last two columns(unrequired I guess)
data_D2 <- data_D2[,1:5]
str(data_D2)
# Remove NAs
data_D2 <- data_D2[!is.na(data_D2$NA.),]
dim(data_D2)
#name ID column
data_D2$id <- data_D2$NA.
#Create positional values as factors
data_D2$Rowf <- as.factor(data_D2$Row)
data_D2$Treef <- as.factor(data_D2$Tree)
# stringsAsFactors = FALSE, prevent importing as factors
# check.names = FALSE, prevent R from adding extra values to names
# na.strings = "--", converts given na into NA
snp_D2 <- read.csv("EC103xEC201_GBS_40clusters_abxaa.csv",header=T,stringsAsFactors = FALSE, check.names = FALSE, na.strings = "--")
# Allocating numeric value to markers
snp_D2[snp_D2=="aa"] <- 0
snp_D2[snp_D2=="ab"] <- 1
snp_D2[snp_D2=="bb"] <- 2
# Remove Tree ID
snp_D2 <- snp_D2[,-1]
# Transpose, turn into a matrix
snp_M2 <- t(as.matrix(sapply(snp_D2,as.numeric)))
#Select snps from individuals present in the data_D2 matrix
snp_M2 <- snp_M2[row.names(snp_M2) %in% data_D2$id,]
#Create an A matrix (Additive relationship) and view top 10 rows and columns
A <-  A.mat(snp_M2[])
A[1:10,1:10]
#create a heatmap of relationships (maybe use another heatmap style this one bit clunky)
colfunc <- colorRampPalette(c("steelblue4","springgreen","yellow"))
heatmap.2(A[1:100,1:100], col = colfunc(100),Colv = "Rowv",revC=TRUE)
library(data.table)
library(ggplot2)
library(sommer)
library(gplots)
library(xlsx)
library(plyr)
options( stringsAsFactors=F,
max.print = 1000,
scipen=8,
digits=4)
Data <- read.xlsx(file = "Entire.xlsx", sheetName = "Sheet1",startRow = 1, as.data.frame = T)
data_D3 = subset(Data,Allocation == "F1")
str(data_D3)
data_D3$Tree = data_D3$Row
data_D3$Row = data_D3$Column
data_D3 <- transform(data_D3, Treeb = substr(Tree.ID, 2,6))
data_D3$Treee = "1"
data_D3$Tree.ID = paste0(data_D3$Treee, sep = "", data_D3$Treeb)
Comb = ddply(data_D3, .(Tree.ID), summarize, Anth = mean(Anth, na.rm = T),  Chl = mean(Chl, na.rm = T), Flav = mean(Flav, na.rm = T))
data_D3 <- data_D3[,c(1,4,8,16)]
data_D3 = merge(data_D3,Comb, by = "Tree.ID")
data_D3 = distinct(data_D3)
data_D3 = data_D3[!is.na(data_D3$Chl),]
#remove last two columns(unrequired I guess)
str(data_D3)
#Rename to fit into code, and factors
data_D3$id <- data_D3$Tree.ID
data_D3$Rowf <- as.factor(data_D3$Row)
data_D3$Treef <- as.factor(data_D3$Tree)
# stringsAsFactors = FALSE, prevent importing as factors
# check.names = FALSE, prevent R from adding extra values to names
# na.strings = "--", converts given na into NA
snp_D3 <- read.csv("EC103xEC201_GBS_40clusters_abxaa.csv",header=T,stringsAsFactors = FALSE, check.names = FALSE, na.strings = "--")
# Allocating numeric value to markers
snp_D3[snp_D3=="aa"] <- 0
snp_D3[snp_D3=="ab"] <- 1
snp_D3[snp_D3=="bb"] <- 2
# Remove Tree ID
snp_D3 <- snp_D3[,-1]
# Transpose, turn into a matrix
snp_M3 <- t(as.matrix(sapply(snp_D3,as.numeric)))
#Select snps from individuals present in the data_D3 matrix
snp_M3 <- snp_M3[row.names(snp_M3) %in% data_D3$id,]
#Create an A matrix (Additive relationship) and view top 10 rows and columns
A2 <-  A.mat(snp_M3[])
A2[1:10,1:10]
#create a heatmap of relationships (maybe use another heatmap style this one bit clunky)
colfunc <- colorRampPalette(c("steelblue4","springgreen","yellow"))
heatmap.2(A2[1:100,1:100], col = colfunc(100),Colv = "Rowv",revC=TRUE)
library(data.table)
library(ggplot2)
library(sommer)
library(gplots)
library(xlsx)
library(plyr)
options( stringsAsFactors=F,
max.print = 1000,
scipen=8,
digits=4)
Data <- read.xlsx(file = "Entire.xlsx", sheetName = "Sheet1",startRow = 1, as.data.frame = T)
data_D3 = subset(Data,Allocation == "F1")
str(data_D3)
data_D3$Tree = data_D3$Row
data_D3$Row = data_D3$Column
data_D3 <- transform(data_D3, Treeb = substr(Tree.ID, 2,6))
data_D3$Treee = "1"
data_D3$Tree.ID = paste0(data_D3$Treee, sep = "", data_D3$Treeb)
Comb = ddply(data_D3, .(Tree.ID), summarize, Anth = mean(Anth, na.rm = T),  Chl = mean(Chl, na.rm = T), Flav = mean(Flav, na.rm = T))
data_D3 <- data_D3[,c(1,4,8,16)]
data_D3 = merge(data_D3,Comb, by = "Tree.ID")
data_D3 = distinct(data_D3)
data_D3 = data_D3[!is.na(data_D3$Chl),]
#remove last two columns(unrequired I guess)
str(data_D3)
#Rename to fit into code, and factors
data_D3$id <- data_D3$Tree.ID
data_D3$Rowf <- as.factor(data_D3$Row)
data_D3$Treef <- as.factor(data_D3$Tree)
# stringsAsFactors = FALSE, prevent importing as factors
# check.names = FALSE, prevent R from adding extra values to names
# na.strings = "--", converts given na into NA
snp_D3 <- read.csv("EC103xEC201_GBS_40clusters_abxaa.csv",header=T,stringsAsFactors = FALSE, check.names = FALSE, na.strings = "--")
# Allocating numeric value to markers
snp_D3[snp_D3=="aa"] <- 0
snp_D3[snp_D3=="ab"] <- 1
snp_D3[snp_D3=="bb"] <- 2
# Remove Tree ID
snp_D3 <- snp_D3[,-1]
# Transpose, turn into a matrix
snp_M3 <- t(as.matrix(sapply(snp_D3,as.numeric)))
#Select snps from individuals present in the data_D3 matrix
snp_M3 <- snp_M3[row.names(snp_M3) %in% data_D3$id,]
#Create an A matrix (Additive relationship) and view top 10 rows and columns
A2 <-  A.mat(snp_M3[])
A2[1:10,1:10]
#create a heatmap of relationships (maybe use another heatmap style this one bit clunky)
colfunc <- colorRampPalette(c("steelblue4","springgreen","yellow"))
heatmap.2(A2[1:100,1:100], col = colfunc(100),Colv = "Rowv",revC=TRUE)
library(data.table)
library(ggplot2)
library(sommer)
library(gplots)
library(xlsx)
# No option for stringsAsFactors
data_D2 <- read.xlsx("Height phenotype 20 April 2018.xlsx",sheetName = "Phenotypes April 2018",startRow = 1, as.data.frame = T)
str(data_D2)
#remove last two columns(unrequired I guess)
data_D2 <- data_D2[,1:5]
str(data_D2)
# Remove NAs
data_D2 <- data_D2[!is.na(data_D2$NA.),]
dim(data_D2)
#name ID column
data_D2$id <- data_D2$NA.
#Create positional values as factors
data_D2$Rowf <- as.factor(data_D2$Row)
data_D2$Treef <- as.factor(data_D2$Tree)
# stringsAsFactors = FALSE, prevent importing as factors
# check.names = FALSE, prevent R from adding extra values to names
# na.strings = "--", converts given na into NA
snp_D2 <- read.csv("EC103xEC201_GBS_40clusters_abxaa.csv",header=T,stringsAsFactors = FALSE, check.names = FALSE, na.strings = "--")
# Allocating numeric value to markers
snp_D2[snp_D2=="aa"] <- 0
snp_D2[snp_D2=="ab"] <- 1
snp_D2[snp_D2=="bb"] <- 2
# Remove Tree ID
snp_D2 <- snp_D2[,-1]
# Transpose, turn into a matrix
snp_M2 <- t(as.matrix(sapply(snp_D2,as.numeric)))
#Select snps from individuals present in the data_D2 matrix
snp_M2 <- snp_M2[row.names(snp_M2) %in% data_D2$id,]
#Create an A matrix (Additive relationship) and view top 10 rows and columns
A <-  A.mat(snp_M2[])
A[1:10,1:10]
#create a heatmap of relationships (maybe use another heatmap style this one bit clunky)
colfunc <- colorRampPalette(c("steelblue4","springgreen","yellow"))
heatmap.2(A[1:100,1:100], col = colfunc(100),Colv = "Rowv",revC=TRUE)
A[1:10,1:10]
A2[1:10,1:10]
# mmer linear mixed model fit with fixed effects and random effects.
# spl2D fits 2D spline
mix12 <- mmer(fixed= Chl~1,
random =~vs(id, Gu=A2)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D3)
View(data_D3)
str(data_D2)
str(data_D3)
mix12 <- mmer(fixed= Chl~Flower,
random =~vs(id, Gu=A2)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D3)
View(data_D3)
?mmer
mix12 <- mmer(fixed= Chl~Flav,
random =~vs(id, Gu=A2)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D3)
# stringsAsFactors = FALSE, prevent importing as factors
# check.names = FALSE, prevent R from adding extra values to names
# na.strings = "--", converts given na into NA
snp_D3 <- read.csv("EC103xEC201_GBS_40clusters_abxaa.csv",header=T,stringsAsFactors = FALSE, check.names = FALSE, na.strings = "--")
# Allocating numeric value to markers
snp_D3[snp_D3=="aa"] <- 0
snp_D3[snp_D3=="ab"] <- 1
snp_D3[snp_D3=="bb"] <- 2
# Remove Tree ID
snp_D3 <- snp_D3[,-1]
# Transpose, turn into a matrix
snp_M3 <- t(as.matrix(sapply(snp_D3,as.numeric)))
#Select snps from individuals present in the data_D3 matrix
snp_M3 <- snp_M3[row.names(snp_M3) %in% data_D3$id,]
#Create an A matrix (Additive relationship) and view top 10 rows and columns
A2 <-  A.mat(snp_M3[])
A2[1:10,1:10]
#create a heatmap of relationships (maybe use another heatmap style this one bit clunky)
colfunc <- colorRampPalette(c("steelblue4","springgreen","yellow"))
heatmap.2(A2[1:100,1:100], col = colfunc(100),Colv = "Rowv",revC=TRUE)
A2[1:10,1:10]
A2$
dsf
A2
str(A2)
de <-data("DT_example")
data("DT_example")
de <- DT_example
View(de)
# mmer linear mixed model fit with fixed effects and random effects.
# spl2D fits 2D spline
mix122 <- mmer(fixed= Chl~1,
random =~vs(id, Gu=A2)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D3)
# mmer linear mixed model fit with fixed effects and random effects.
# spl2D fits 2D spline
mix12 <- mmer(fixed= Height ~ pruning,
random =~vs(id, Gu=A)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D2)
summary(mix12)$varcomp
mix12 <- mmer(fixed= Height ~1,
random =~vs(id, Gu=A)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D2)
data_D3 <- data_D3[data_D3$id %in% row.names(snp_M3),]
# mmer linear mixed model fit with fixed effects and random effects.
# spl2D fits 2D spline
mix122 <- mmer(fixed= Chl~1,
random =~vs(id, Gu=A2)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D3)
str(data_D3)
library(data.table)
library(ggplot2)
library(sommer)
library(gplots)
library(xlsx)
library(plyr)
options( stringsAsFactors=F,
max.print = 1000,
scipen=8,
digits=4)
Data <- read.xlsx(file = "Entire.xlsx", sheetName = "Sheet1",startRow = 1, as.data.frame = T)
data_D3 = subset(Data,Allocation == "F1")
str(data_D3)
data_D3$Tree = data_D3$Row
data_D3$Row = as.numeric(data_D3$Column)
data_D3 <- transform(data_D3, Treeb = substr(Tree.ID, 2,6))
data_D3$Treee = "1"
data_D3$Tree.ID = paste0(data_D3$Treee, sep = "", data_D3$Treeb)
Comb = ddply(data_D3, .(Tree.ID), summarize, Anth = mean(Anth, na.rm = T),  Chl = mean(Chl, na.rm = T), Flav = mean(Flav, na.rm = T))
data_D3 <- data_D3[,c(1,4,8,16)]
data_D3 = merge(data_D3,Comb, by = "Tree.ID")
data_D3 = distinct(data_D3)
data_D3 = data_D3[!is.na(data_D3$Chl),]
#remove last two columns(unrequired I guess)
str(data_D3)
#Rename to fit into code, and factors
data_D3$id <- data_D3$Tree.ID
data_D3$Rowf <- as.factor(data_D3$Row)
data_D3$Treef <- as.factor(data_D3$Tree)
# stringsAsFactors = FALSE, prevent importing as factors
# check.names = FALSE, prevent R from adding extra values to names
# na.strings = "--", converts given na into NA
snp_D3 <- read.csv("EC103xEC201_GBS_40clusters_abxaa.csv",header=T,stringsAsFactors = FALSE, check.names = FALSE, na.strings = "--")
# Allocating numeric value to markers
snp_D3[snp_D3=="aa"] <- 0
snp_D3[snp_D3=="ab"] <- 1
snp_D3[snp_D3=="bb"] <- 2
# Remove Tree ID
snp_D3 <- snp_D3[,-1]
# Transpose, turn into a matrix
snp_M3 <- t(as.matrix(sapply(snp_D3,as.numeric)))
#Select snps from individuals present in the data_D3 matrix
snp_M3 <- snp_M3[row.names(snp_M3) %in% data_D3$id,]
data_D3 <- data_D3[data_D3$id %in% row.names(snp_M3),]
#Create an A matrix (Additive relationship) and view top 10 rows and columns
A2 <-  A.mat(snp_M3[])
A2[1:10,1:10]
#create a heatmap of relationships (maybe use another heatmap style this one bit clunky)
colfunc <- colorRampPalette(c("steelblue4","springgreen","yellow"))
heatmap.2(A2[1:100,1:100], col = colfunc(100),Colv = "Rowv",revC=TRUE)
# mmer linear mixed model fit with fixed effects and random effects.
# spl2D fits 2D spline
mix13 <- mmer(fixed= Chl~1,
random =~vs(id, Gu=A2)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D3)
library(data.table)
library(ggplot2)
library(sommer)
library(gplots)
library(xlsx)
library(plyr)
options( stringsAsFactors=F,
max.print = 1000,
scipen=8,
digits=4)
Data <- read.xlsx(file = "Entire.xlsx", sheetName = "Sheet1",startRow = 1, as.data.frame = T)
data_D3 = subset(Data,Allocation == "F1")
str(data_D3)
data_D3$Tree = as.numeric(data_D3$Row)
data_D3$Row = as.numeric(data_D3$Column)
data_D3 <- transform(data_D3, Treeb = substr(Tree.ID, 2,6))
data_D3$Treee = "1"
data_D3$Tree.ID = paste0(data_D3$Treee, sep = "", data_D3$Treeb)
Comb = ddply(data_D3, .(Tree.ID), summarize, Anth = mean(Anth, na.rm = T),  Chl = mean(Chl, na.rm = T), Flav = mean(Flav, na.rm = T))
data_D3 <- data_D3[,c(1,4,8,16)]
data_D3 = merge(data_D3,Comb, by = "Tree.ID")
data_D3 = distinct(data_D3)
data_D3 = data_D3[!is.na(data_D3$Chl),]
#remove last two columns(unrequired I guess)
str(data_D3)
#Rename to fit into code, and factors
data_D3$id <- data_D3$Tree.ID
data_D3$Rowf <- as.factor(data_D3$Row)
data_D3$Treef <- as.factor(data_D3$Tree)
# stringsAsFactors = FALSE, prevent importing as factors
# check.names = FALSE, prevent R from adding extra values to names
# na.strings = "--", converts given na into NA
snp_D3 <- read.csv("EC103xEC201_GBS_40clusters_abxaa.csv",header=T,stringsAsFactors = FALSE, check.names = FALSE, na.strings = "--")
# Allocating numeric value to markers
snp_D3[snp_D3=="aa"] <- 0
snp_D3[snp_D3=="ab"] <- 1
snp_D3[snp_D3=="bb"] <- 2
# Remove Tree ID
snp_D3 <- snp_D3[,-1]
# Transpose, turn into a matrix
snp_M3 <- t(as.matrix(sapply(snp_D3,as.numeric)))
#Select snps from individuals present in the data_D3 matrix
snp_M3 <- snp_M3[row.names(snp_M3) %in% data_D3$id,]
data_D3 <- data_D3[data_D3$id %in% row.names(snp_M3),]
#Create an A matrix (Additive relationship) and view top 10 rows and columns
A2 <-  A.mat(snp_M3[])
A2[1:10,1:10]
#create a heatmap of relationships (maybe use another heatmap style this one bit clunky)
colfunc <- colorRampPalette(c("steelblue4","springgreen","yellow"))
heatmap.2(A2[1:100,1:100], col = colfunc(100),Colv = "Rowv",revC=TRUE)
# mmer linear mixed model fit with fixed effects and random effects.
# spl2D fits 2D spline
mix13 <- mmer(fixed= Chl~1,
random =~vs(id, Gu=A2)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D3)
summary(mix13)$varcomp
fittedvals <- spatPlots(object = mix13, by= id)
mix13$Beta +mix1$U$'u:id'
mix13$Beta +mix13$U$'u:id'
summary(mix13)
mix13 <- mmer(fixed= Flav~1,
random =~vs(id, Gu=A2)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D3)
summary(mix13)
# mmer linear mixed model fit with fixed effects and random effects.
# spl2D fits 2D spline
mix13 <- mmer(fixed= Anth~1,
random =~vs(id, Gu=A2)
+ Rowf
+ Treef
+ spl2D(Row,Tree),
rcov=~units,
data=data_D3)
summary(mix13)
corr_D2 <- read.xlsx("Similarity of individuals Joinmap calculated.xlsx",sheetIndex = 2,startRow = 1)
str(corr_D2)
